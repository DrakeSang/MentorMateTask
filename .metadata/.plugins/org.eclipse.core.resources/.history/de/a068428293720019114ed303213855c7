package mentorMateLogo;

public class Logo {
	private static final String DASH = "-";
	
	private static final String STAR = "*";
	
	private int width;
	
	private int originalWidth;
	
	private int topOrBottomLinesMiddleNumber;
	
	private int middleLinesAverageNumber;
	
	private int startingIncrementingValue;
	
	private int finalIncrementingValue;
	
	private int startingDecreasingValue;
	
	private int finalDecreasingValue;

	public Logo(int width) {
		this.setWidth(width);
		this.setOriginalWidth(width);
		this.setTopOrBottomLinesMiddleNumber(width * 2);
		this.setMiddleLinesAverageNumber(width * 2);
		this.setStartingIncrementingValue(width);
		this.setFinalIncrementingValue(0);
		this.setStartingDecreasingValue(width);
		this.setFinalIncrementingValue(0);
	}

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getOriginalWidth() {
		return originalWidth;
	}

	public void setOriginalWidth(int originalWidth) {
		this.originalWidth = originalWidth;
	}

	public int getTopOrBottomLinesMiddleNumber() {
		return topOrBottomLinesMiddleNumber;
	}

	public void setTopOrBottomLinesMiddleNumber(int topOrBottomLinesMiddleNumber) {
		this.topOrBottomLinesMiddleNumber = topOrBottomLinesMiddleNumber;
	}

	public int getMiddleLinesAverageNumber() {
		return middleLinesAverageNumber;
	}

	public void setMiddleLinesAverageNumber(int middleLinesAverageNumber) {
		this.middleLinesAverageNumber = middleLinesAverageNumber;
	}

	public int getStartingIncrementingValue() {
		return startingIncrementingValue;
	}

	public void setStartingIncrementingValue(int startingIncrementingValue) {
		this.startingIncrementingValue = startingIncrementingValue;
	}

	public int getFinalIncrementingValue() {
		return finalIncrementingValue;
	}

	public void setFinalIncrementingValue(int finalIncrementingValue) {
		this.finalIncrementingValue = finalIncrementingValue;
	}

	public int getStartingDecreasingValue() {
		return startingDecreasingValue;
	}

	public void setStartingDecreasingValue(int startingDecreasingValue) {
		this.startingDecreasingValue = startingDecreasingValue;
	}

	public int getFinalDecreasingValue() {
		return finalDecreasingValue;
	}

	public void setFinalDecreasingValue(int finalDecreasingValue) {
		this.finalDecreasingValue = finalDecreasingValue;
	}
	
	public String createTopOrBottomLine(
			StringBuilder sb,
			String dash,
			String star) {
		for(int i = 1; i <= 4; i++) {
			if(i % 2 == 0) {
				sb.append(star.repeat(this.getOriginalWidth()));
			}else {
				sb.append(dash.repeat(this.getOriginalWidth()));
			}
		}
		sb.append(dash.repeat(this.getTopOrBottomLinesMiddleNumber()));
		for(int j = 1; j <= 4; j++) {
			if(j % 2 == 0) {
				sb.append(dash.repeat(this.getOriginalWidth()));
			}else {
				sb.append(star.repeat(this.getOriginalWidth()));
			}
		}
		sb.append("\n");
		
		return sb.toString();
	}
	
	public String printFirstMiddleLines(
			StringBuilder sb,
			int n,
			int startingIncrementingValue,
			int startingDecreasingValue,
			int startingMiddleNumber,
			String dash,
			String star) {
		sb.append(DASH.repeat(this.getWidth()));
		sb.append(STAR.repeat(startingIncrementingValue));
		sb.append(DASH.repeat(startingDecreasingValue));
		sb.append(STAR.repeat(startingIncrementingValue));
		sb.append(DASH.repeat(startingMiddleNumber));
		sb.append(STAR.repeat(startingIncrementingValue));
		sb.append(DASH.repeat(startingDecreasingValue));
		sb.append(STAR.repeat(startingIncrementingValue));
		sb.append(DASH.repeat(this.getWidth()));
		
		return sb.toString();
	}	
}